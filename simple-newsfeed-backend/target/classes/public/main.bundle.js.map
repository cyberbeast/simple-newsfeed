{"version":3,"sources":["/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/$_lazy_route_resource lazy","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.css","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.html","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.module.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.css","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.html","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/services/index.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/services/newsfeed.service.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/actions/index.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/actions/newsfeedItem.actions.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/effects/index.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/effects/newsfeed.effects.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/index.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/reducers/index.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/reducers/newsfeedItem.reducer.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/environments/environment.ts","/Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fav-icon {\\n  padding: 0 14px;\\n}\\n\\n.spacer {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>Simple Newsfeed App</span>\\n    <span class=\\\"spacer\\\"></span>\\n    <mat-icon class=\\\"fav-icon\\\">favorite</mat-icon>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<router-outlet>\\n</router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { environment } from '../environments/environment'; // Angular CLI environemnt\n\n// Material imports\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { AppComponent } from './app.component';\n\n// ngrx main imports\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducers, effects } from './store';\n\n// service imports\nimport * as fromServices from './services';\nimport { NewsfeedComponent } from './newsfeed/newsfeed.component';\n\nconst appRoutes: Routes = [\n  { path: '', redirectTo: '/newsfeed', pathMatch: 'full' },\n  { path: 'newsfeed', component: NewsfeedComponent },\n  { path: '**', redirectTo: '/newsfeed' }\n];\n\n@NgModule({\n  declarations: [AppComponent, NewsfeedComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    ),\n    MatInputModule,\n    MatNativeDateModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatDividerModule,\n    MatListModule,\n    MatIconModule,\n    MatDatepickerModule,\n    StoreModule.forRoot({}),\n    StoreModule.forFeature('app', reducers),\n    EffectsModule.forRoot([]),\n    EffectsModule.forFeature(effects),\n    // Instrumentation must be imported after importing StoreModule (config is optional)\n    StoreDevtoolsModule.instrument({\n      maxAge: 25, // Retains last 25 states\n      logOnly: environment.production // Restrict extension to log-only mode\n    }),\n    FlexLayoutModule\n  ],\n  providers: [fromServices.services],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.css\n// module id = ../../../../../src/app/newsfeed/newsfeed.component.css\n// module chunks = main","module.exports = \"<mat-list>\\n  <div *ngFor=\\\"let item of (newsfeed$ | async)\\\">\\n    <mat-list-item>\\n      <p mat-line>{{item.text}}</p>\\n      <p mat-line style=\\\"font-size:x-small; color:rgba(0, 0, 0, 0.54)\\\"> {{item.publicationDate}} </p>\\n    </mat-list-item>\\n    <mat-divider></mat-divider>\\n  </div>\\n</mat-list>\\n<!-- <pre>\\n  {{newsfeed$ | async | json}}\\n</pre> -->\\n<div fxLayout=\\\"column\\\" fxFlexFill>\\n  <div fxFlexOrder=\\\"2\\\" fxFlexAlign=\\\"center\\\">\\n    <button mat-raised-button (click)=\\\"onCreate(text.value, publicationDate.value)\\\">Add</button>\\n  </div>\\n  <div style=\\\"margin:2%\\\" fxFlexAlign=\\\"center\\\">\\n    <mat-form-field style=\\\"width: 100%;\\\">\\n      <textarea matInput #text placeholder=\\\"Text\\\"></textarea>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <input matInput #publicationDate [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.html\n// module id = ../../../../../src/app/newsfeed/newsfeed.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Store } from '@ngrx/store';\nimport * as fromStore from './../store';\n\nimport { NewsfeedItem } from './../models/newsfeedItem.model';\n\n@Component({\n  selector: 'app-newsfeed',\n  templateUrl: './newsfeed.component.html',\n  styleUrls: ['./newsfeed.component.css']\n})\nexport class NewsfeedComponent implements OnInit {\n  newsfeed$: Observable<NewsfeedItem[]>;\n  constructor(private store: Store<fromStore.AppState>) {\n    this.newsfeed$ = store.select(fromStore.getCurrentNewsfeed);\n  }\n\n  onCreate(text: string, publicationDate: string) {\n    this.store.dispatch(\n      new fromStore.CreateNewsItem({\n        text: text,\n        publicationDate: new Date(publicationDate).toISOString()\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.store.dispatch(new fromStore.FetchNewsfeed());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/newsfeed/newsfeed.component.ts","import { NewsfeedService } from './newsfeed.service';\n\nexport const services: any[] = [NewsfeedService];\n\nexport * from './newsfeed.service';\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/services/index.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { catchError } from 'rxjs/operators';\nimport 'rxjs/add/observable/throw';\n\nimport { NewsfeedItem } from './../models/newsfeedItem.model';\n\n@Injectable()\nexport class NewsfeedService {\n  constructor(private http: HttpClient) {}\n\n  fetchNewsfeed(): Observable<any> {\n    return this.http\n      .get<any>('/newsItems')\n      .pipe(catchError((error: any) => Observable.throw(error.json())));\n  }\n\n  createNewsfeedItem(newsfeedItem: Object): Observable<any> {\n    return this.http\n      .post<any>('/newsItems', newsfeedItem)\n      .pipe(catchError((error: any) => Observable.throw(error.json())));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/services/newsfeed.service.ts","export * from './newsfeedItem.actions';\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/actions/index.ts","import { Action } from '@ngrx/store';\n\nimport { NewsfeedItem } from '../../models/newsfeedItem.model';\n\nexport const FETCH_NEWSFEED = '[Newsfeed Item] Fetch All';\nexport const FETCH_NEWSFEED_SUCCESS = '[Newsfeed Item] Fetch All - Success';\nexport const FETCH_NEWSFEED_FAIL = '[Newsfeed Item] Fetch All - Fail';\n\nexport class FetchNewsfeed implements Action {\n  readonly type = FETCH_NEWSFEED;\n  constructor() {}\n}\n\nexport class FetchNewsfeedSuccess implements Action {\n  readonly type = FETCH_NEWSFEED_SUCCESS;\n  constructor(public payload: NewsfeedItem[]) {}\n}\n\nexport class FetchNewsfeedFail implements Action {\n  readonly type = FETCH_NEWSFEED_FAIL;\n  constructor(public payload: any) {}\n}\n\nexport const CREATE_NEWS_ITEM = '[Newsfeed Item] Create';\nexport const CREATE_NEWS_ITEM_SUCCESS = '[Newsfeed Item] Create - Success';\nexport const CREATE_NEWS_ITEM_FAIL = '[Newsfeed Item] Create - Fail';\n\nexport class CreateNewsItem implements Action {\n  readonly type = CREATE_NEWS_ITEM;\n  constructor(public payload: NewsfeedItem) {}\n}\n\nexport class CreateNewsItemSuccess implements Action {\n  readonly type = CREATE_NEWS_ITEM_SUCCESS;\n  constructor(public payload: NewsfeedItem) {}\n}\n\nexport class CreateNewsItemFail implements Action {\n  readonly type = CREATE_NEWS_ITEM;\n  constructor(public payload: any) {}\n}\n\n// Newsfeed Item action types\nexport type NewsfeedItemActions =\n  | FetchNewsfeed\n  | FetchNewsfeedSuccess\n  | FetchNewsfeedFail\n  | CreateNewsItem\n  | CreateNewsItemSuccess\n  | CreateNewsItemFail;\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/actions/newsfeedItem.actions.ts","import { NewsfeedEffects } from './newsfeed.effects';\n\nexport const effects: any[] = [NewsfeedEffects];\n\nexport * from './newsfeed.effects';\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/effects/index.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { defer } from 'rxjs/observable/defer';\nimport { Action } from '@ngrx/store';\nimport { Effect, Actions } from '@ngrx/effects';\nimport { of } from 'rxjs/observable/of';\nimport { from } from 'rxjs/observable/from';\n\nimport { map, switchMap, catchError, mergeMap } from 'rxjs/operators';\n\nimport * as allActions from '../actions/';\nimport * as fromServices from '../../services';\n\n@Injectable()\nexport class NewsfeedEffects {\n  constructor(\n    private actions$: Actions,\n    private newsfeedService: fromServices.NewsfeedService\n  ) {}\n\n  @Effect()\n  fetchNewsfeed$ = this.actions$.ofType(allActions.FETCH_NEWSFEED).pipe(\n    switchMap((action: allActions.NewsfeedItemActions) => {\n      return this.newsfeedService.fetchNewsfeed().pipe(\n        map(response => {\n          if (response.status === 'SUCCESS')\n            return new allActions.FetchNewsfeedSuccess(response.data);\n          return new allActions.FetchNewsfeedFail(response.status);\n        }),\n        catchError(error => of(new allActions.FetchNewsfeedFail(error)))\n      );\n    })\n  );\n\n  @Effect()\n  createNewsfeedItem$ = this.actions$.ofType(allActions.CREATE_NEWS_ITEM).pipe(\n    map((action: allActions.CreateNewsItem) => action.payload),\n    switchMap(newsFeedItem => {\n      return this.newsfeedService.createNewsfeedItem(newsFeedItem).pipe(\n        map(response => {\n          if (response.status === 'SUCCESS')\n            return new allActions.CreateNewsItemSuccess(response.data);\n          return new allActions.CreateNewsItemFail(response.status);\n        }),\n        catchError(error => of(new allActions.CreateNewsItemFail(error)))\n      );\n    })\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/effects/newsfeed.effects.ts","export * from './reducers';\nexport * from './actions';\nexport * from './effects';\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/index.ts","import {\n  ActionReducerMap,\n  createSelector,\n  createFeatureSelector\n} from '@ngrx/store';\n\nimport * as fromNewsfeed from './newsfeedItem.reducer';\n\nexport interface AppState {\n  currentNewsfeed: fromNewsfeed.NewsfeedState;\n}\n\nexport const reducers: ActionReducerMap<AppState> = {\n  currentNewsfeed: fromNewsfeed.reducer\n};\n\nexport const getAppState = createFeatureSelector<AppState>('app');\n\n// newsfeed state\nexport const getCurrentNewsfeedState = createSelector(\n  getAppState,\n  (state: AppState) => state.currentNewsfeed\n);\n\n// get current newsfeed entities\nexport const getCurrentNewsfeedEntities = createSelector(\n  getCurrentNewsfeedState,\n  fromNewsfeed.getCurrentNewsfeedEntities\n);\n\n//\nexport const getCurrentNewsfeed = createSelector(\n  getCurrentNewsfeedEntities,\n  entities => {\n    return Object.keys(entities)\n      .map(id => entities[id])\n      .sort((a, b) => {\n        return (\n          -1 *\n          (new Date(a.publicationDate).getTime() -\n            new Date(b.publicationDate).getTime())\n        );\n      });\n  }\n);\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/reducers/index.ts","import { NewsfeedItem } from './../../models/newsfeedItem.model';\nimport { InitialState } from '@ngrx/store/src/models';\nimport * as newsFeedItemActions from '../actions/newsfeedItem.actions';\n\nexport interface NewsfeedState {\n  entities: {\n    [id: string]: NewsfeedItem;\n  };\n  // currentNewsfeed: NewsfeedItem[];\n}\n\nexport const initialState: NewsfeedState = {\n  entities: {}\n  // currentNewsfeed: []\n};\n\nexport function reducer(\n  state = initialState,\n  action: newsFeedItemActions.NewsfeedItemActions\n): NewsfeedState {\n  switch (action.type) {\n    case newsFeedItemActions.FETCH_NEWSFEED: {\n      return {\n        ...state\n      };\n    }\n\n    case newsFeedItemActions.FETCH_NEWSFEED_SUCCESS: {\n      const data = action.payload;\n      const entities = data.reduce(\n        (\n          entities: { [id: string]: NewsfeedItem },\n          newsfeedItem: NewsfeedItem\n        ) => {\n          return {\n            ...entities,\n            [newsfeedItem.objectId]: newsfeedItem\n          };\n        },\n        {\n          ...state.entities\n        }\n      );\n\n      return {\n        ...state,\n        entities\n      };\n    }\n\n    case newsFeedItemActions.FETCH_NEWSFEED_FAIL: {\n      return {\n        ...state\n      };\n    }\n\n    case newsFeedItemActions.CREATE_NEWS_ITEM_SUCCESS: {\n      const newsFeedItem = action.payload;\n      const entities = {\n        ...state.entities,\n        [newsFeedItem.objectId]: newsFeedItem\n      };\n\n      return {\n        ...state,\n        entities\n      };\n    }\n  }\n  return state;\n}\n\nexport const getCurrentNewsfeedEntities = (state: NewsfeedState) =>\n  state.entities;\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/app/store/reducers/newsfeedItem.reducer.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/environments/environment.ts","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/cyberbeast/Documents/simple-newsfeed/simple-newsfeed-app/src/main.ts"],"sourceRoot":"webpack:///"}